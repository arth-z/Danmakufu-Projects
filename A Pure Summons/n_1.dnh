#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Nonspell 1"]
#Text["Everybody knows these blue circles. At least you can dodge them 1-by-1 here."]
#System["./JunkoSystem.dnh"]
#Background["./JunkoBackground.dnh"]

#include "./func_library.dnh"
#include "./img/ZUNShot_Const.txt"
#include "./JunkoFX.dnh"

let mainTimer = 0;

@Event 
{
  alternative(GetEventType())
    case(EV_REQUEST_LIFE){ //Sets boss's life
        SetScriptResult(4250);
    }
    case(EV_REQUEST_TIMER){ //Sets attack time
        SetScriptResult(40);
    }
    case(EV_REQUEST_SPELL_SCORE){ //Spellcard bonus
        SetScriptResult(1000000);
    }
}

@Initialize 
{
  
  objScene = GetEnemyBossSceneObjectID();
  objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);

  TLoadJunkoFX;

  ObjEnemy_Regist(objBoss);

  ObjMove_SetPosition(objBoss, GetCenterX(), GetCenterY()*0.5);

  TJunkoHitFX;
  TJunkoBurnAura;
  TJunkoCircleAura;
  TJunkoShadowAura;
  TDistortionAura;
  MainTask;

  TJunkoFinalize;
}

let new_x = GetCenterX() + rand(-50, 50);
let new_y = GetCenterY()*0.5 + rand(-10,10);

@MainLoop 
{
  ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32);
  ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);
  
  let bossX = ObjMove_GetX(objBoss);
  let bossY = ObjMove_GetY(objBoss);

  // movement constants
  let move_interval = 240;
  let move_time = 60;

  // random movement control
  if (mainTimer % move_interval < move_time) {
    if (mainTimer % move_interval == 0) {
      new_x = GetCenterX() + rand(-50, 50);
      new_y = GetCenterY()*0.5 + rand(-10,10);
      ObjMove_SetDestAtFrame(objBoss, new_x, new_y, move_time);
    } else {
      MDrawJunkoMove(mainTimer % move_interval, move_interval, new_x, new_y, move_time);
    }
  } else {
    MDrawJunkoBlink(mainTimer);
    MJunkoBreathe(mainTimer);
  }

  mainTimer++;
  yield;
}

task fast_circle(posX, posY, offset, inc, proj, accel, max) {
  
  let angle = offset;
  let angle_inc = inc;

  loop(360/angle_inc) {
    angle+=angle_inc;
    let shot = CreateShotA2(posX, posY, 0, angle, accel, max, proj, 5);
    ObjRender_SetBlendType(shot, BLEND_ADD_ARGB);
    PlaySFX(shoot_sfx);
  }

  angle += offset;

}

let shoot_sfx;

task MainTask {

  wait(75);
  shoot_sfx = SoundSFX(GetCurrentScriptDirectory() ~ "./sfx/se_kira00.wav");

  // it's the super dense but slow PDH blue rings.
  while(ObjEnemy_GetInfo(objBoss,INFO_LIFE) > 0){

    let angleT = rand(0, 360);

    fast_circle(GetCenterX() + 150*rand(0.75, 1.25), GetCenterX()*0.5 + rand(-20, 20), angleT, 3, SMALL_BLUE, 0.5, 2);
      
    fast_circle(GetCenterX() - 150*rand(0.75, 1.25), GetCenterX()*0.5 + rand(-20, 20), angleT, 3, SMALL_BLUE, 0.5, 2);    

    wait(120);
  }
  
}