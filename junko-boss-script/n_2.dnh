#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Squirrel's Junko - Nonspell 2"]
#Text["Most nonspells in this fight have a 'trick' to them. This one does too."]
#System["./JunkoSystem.dnh"]
#Background["./JunkoBackground.dnh"]

#include "./func_library.dnh"
#include "./img/ZUNShot_Const.txt"
#include "./JunkoFX.dnh"

let mainTimer = 0;

@Event 
{
  alternative(GetEventType())
    case(EV_REQUEST_LIFE){ //Sets boss's life
        SetScriptResult(5500);
    }
    case(EV_REQUEST_TIMER){ //Sets attack time
        SetScriptResult(40);
    }
    case(EV_REQUEST_SPELL_SCORE){ //Spellcard bonus
        SetScriptResult(1000000);
    }
}

@Initialize 
{ 
  objScene = GetEnemyBossSceneObjectID();
  objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
  ObjEnemy_Regist(objBoss);

  TLoadJunkoFX;

  ObjMove_SetDestAtFrame(objBoss, GetCenterX(), GetCenterY()/1.25, 60);

  TJunkoHitFX;
  TJunkoBurnAura;
  TJunkoCircleAura;
  TJunkoShadowAura;
  TDistortionAura;
  
  MainTask;

  TJunkoFinalize;
}

let new_x = GetCenterX() + rand(-50, 50);
let new_y = GetCenterY()*0.4 + rand(-10,10);

@MainLoop 
{
  ObjEnemy_SetIntersectionCircleToShot(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 32);
  ObjEnemy_SetIntersectionCircleToPlayer(objBoss, ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 24);
  
  let bossX = ObjMove_GetX(objBoss);
  let bossY = ObjMove_GetY(objBoss);

  // movement constants
  let move_interval = 270;
  let move_time = 60;

  // random movement control

  if (mainTimer % move_interval < move_time) {
    if (mainTimer % move_interval == 0) {
      new_x = GetCenterX() + rand(-50, 50);
      new_y = GetCenterY()*0.4 + rand(-10,10);
      ObjMove_SetDestAtFrame(objBoss, new_x, new_y, move_time);
    } else {
      MDrawJunkoMove(mainTimer % move_interval, move_interval, new_x, new_y, move_time);
    }
  } else {
    MDrawJunkoBlink(mainTimer);
    MJunkoBreathe(mainTimer);
  }

  if (mainTimer == 60) {
    TJunkoShockwave(200, 80, [255, 80, 80]);
  }

  mainTimer++;
  yield;
}

task slow_circle(offset, inc, proj) {

  let angle = offset;
  let angle_inc = inc;

  loop(360/angle_inc) {
    angle+=angle_inc;
    CreateShotA1(ObjMove_GetX(objBoss), ObjMove_GetY(objBoss), 1.5, angle, proj, 5);
  }

  angle += offset;

}

task fast_circle(posX, posY, offset, inc, proj, accel, max) {
  
  let angle = offset;
  let angle_inc = inc;

  loop(360/angle_inc) {
    angle+=angle_inc;
    CreateShotA2(posX, posY, 0, angle, accel, max, proj, 5);
  }

  angle += offset;

}

task MainTask {

  wait(60);
  let shoot_sfx = SoundSFX(GetCurrentScriptDirectory() ~ "./sfx/se_kira00.wav");

  while(ObjEnemy_GetInfo(objBoss,INFO_LIFE) > 0){
    let bossX = ObjMove_GetX(objBoss);
    let bossY = ObjMove_GetY(objBoss);
    let rotation = power(-1, rand_int(1, 2));
    let angleT = 0;

    if (rotation == -1) {
      angleT = 180;
    } else {
      angleT = 0;
    }

    loop(15) {
      if (Obj_IsDeleted(objBoss)) {return}
      let spawnX = bossX + cos(angleT) * 100;
      let spawnY = bossY + sin(angleT) * 100;

      fast_circle(spawnX, spawnY, angleT+90, 9, L_DOT_RED, 0.1, 2);
      PlaySFX(shoot_sfx);
      angleT+=rotation*360/30;
      wait(10);
    }
    wait(120);
  } 
  
}