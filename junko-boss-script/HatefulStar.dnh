#include "./func_library.dnh"
#include "./sfx/FxnSFX.dnh"

let objStar;
let path = GetCurrentScriptDirectory();
let angle_inc=1;

task TStarInitialise(x, y, angle, speed) {
  objStar = ObjEnemy_Create(OBJ_ENEMY);
  ObjEnemy_Regist(objStar);

  ObjEnemy_SetDamageRate(objStar, 0, 0);
  ObjEnemy_SetLife(objStar, 50);
  ObjMove_SetPosition(objStar, x, y);

}

task SetStarSpinRate(angle) {
  angle_inc = angle;
}

task TStarDraw(delay, color) {

  wait(delay);

  ObjPrim_SetTexture(objStar, path ~ "./img/hatefulStar_" ~ color ~ ".png");
  ObjRender_SetBlendType(objStar, BLEND_ALPHA);
	ObjSprite2D_SetSourceRect(objStar, 0, 0, 512, 512);
  Obj_SetRenderPriorityI(objStar, 60);
  ObjRender_SetColor(objStar, 255, 255, 255);
  ObjRender_SetAlpha(objStar, 255);
  ObjSprite2D_SetDestCenter(objStar);

  let xScale = 0.5;
  let yScale = 0.5;
  let angleZ = 0;
  let loop_iters = 0;

  ObjRender_SetScaleXYZ(objStar, yScale, xScale, 1);

  while(ObjEnemy_GetInfo(objStar, INFO_LIFE) > 0) {
    angleZ += angle_inc;
    ObjRender_SetAngleZ(objStar, angleZ);
    ObjSprite2D_SetDestCenter(objStar);
    ObjRender_SetScaleXYZ(objStar, xScale, yScale, 1);
    loop_iters++;
    yield;
  }
}

task TStarShockwave(color) {
  let posX = ObjRender_GetX(objStar);
  let posY = ObjRender_GetY(objStar);
  if (color == "blue") {
    ShockwaveExpand(posX, posY, 120, 15, [100, 100, 255]);
  } else if (color == "red") {
    ShockwaveExpand(posX, posY, 120, 15, [255, 80, 80]);
  } else if (color == "purple") {
    ShockwaveExpand(posX, posY, 120, 15, [255, 100, 255]);
  } else {
    ShockwaveExpand(posX, posY, 120, 15, [255, 255, 255]);
  }
  ScreenShakeA1(20, 3);
}

task SetStarMovement(speed, angle) {
  ObjMove_SetAngle(objStar, angle);
  ObjMove_SetSpeed(objStar, speed);
}


task UpdateStarHitbox {
  ObjEnemy_SetIntersectionCircleToShot(objStar, ObjMove_GetX(objStar), ObjMove_GetY(objStar), 32);
  ObjEnemy_SetIntersectionCircleToPlayer(objStar, ObjMove_GetX(objStar), ObjMove_GetY(objStar), 12);
}

task TStarHitFX {
  let beingHit = true;
  let lastHit = 0;
  let loop_iters = 0;

  let maxLife = ObjEnemy_GetInfo(objStar, INFO_LIFE);

  let normalImpact = SoundSFX(GetCurrentScriptDirectory() ~ "./sfx/se_damage00.wav");
  ObjSound_SetVolumeRate(normalImpact, 75);

  while (!Obj_IsDeleted(objStar)) {

    if (loop_iters % 6 == 0) {
      lastHit = 0;
    } else {
      lastHit += ObjEnemy_GetInfo(objStar, INFO_SHOT_HIT_COUNT);
    }

    beingHit = lastHit > 0;

    let currLife = ObjEnemy_GetInfo(objStar, INFO_LIFE);

    if (loop_iters % 4 == 0 && beingHit) {
      
      PlaySFX(normalImpact);

    } 

    loop_iters++;
    yield;
  }
}

task TStarFinalize {
  while(ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0 && ObjEnemy_GetInfo(objStar, INFO_LIFE) > 0) {yield;}
  Obj_Delete(objStar);
}